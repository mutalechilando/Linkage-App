"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WithUpdateAvailableNotificationNoAppName = exports.WithUpdateAvailableNotification = void 0;

var _react = _interopRequireWildcard(require("react"));

var _headerBar = require("../../header-bar.js");

var _common = require("./common.js");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const WithUpdateAvailableNotification = () => {
  const [modalOpen, setModalOpen] = (0, _react.useState)(false);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_headerBar.HeaderBar, {
    updateAvailable: true,
    onApplyAvailableUpdate: () => setModalOpen(true)
  }), modalOpen && /*#__PURE__*/_react.default.createElement("div", null, "The callback was successful"));
};

exports.WithUpdateAvailableNotification = WithUpdateAvailableNotification;
WithUpdateAvailableNotification.decorators = [(0, _common.createDecoratorCustomDataProviderHeaderBar)(), (0, _common.createDecoratorProvider)({ ..._common.providerConfig,
  appName: 'Data Visualizer'
})];

const WithUpdateAvailableNotificationNoAppName = () => /*#__PURE__*/_react.default.createElement(_headerBar.HeaderBar, {
  updateAvailable: true
});

exports.WithUpdateAvailableNotificationNoAppName = WithUpdateAvailableNotificationNoAppName;
WithUpdateAvailableNotificationNoAppName.decorators = [(0, _common.createDecoratorCustomDataProviderHeaderBar)(), (0, _common.createDecoratorProvider)({ ..._common.providerConfig,
  appName: undefined
})];