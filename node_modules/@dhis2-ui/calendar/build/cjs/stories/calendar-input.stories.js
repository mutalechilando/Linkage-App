"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.NepaliWithNepali = exports.NepaliWithEnglish = exports.IslamicWithArabic = exports.GregorianWithEnglish = exports.GregorianWithArabic = exports.EthiopicWithEnglish = exports.EthiopicWithAmharic = exports.CalendarWithClearButton = void 0;

var _react = _interopRequireWildcard(require("react"));

var _calendarInput = require("../calendar-input/calendar-input.js");

var _calendarStoryWrapper = require("./calendar-story-wrapper.js");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const subtitle = "[Experimental] Calendar Input is a wrapper around Calendar displaying an input that triggers the calendar";
const description = "\nUse a CalendarInput where there is a need to let the user input a date.\n\nNote that it requires a parent, like [Box](../?path=/docs/layout-box--default), to define its size.\n\n```js\nimport { CalendarInput } from '@dhis2/ui'\n```\n";
var _default = {
  title: 'CalendarInput',
  component: _calendarInput.CalendarInput,
  parameters: {
    componentSubtitle: subtitle,
    docs: {
      description: {
        component: description
      }
    }
  }
};
exports.default = _default;

const buildCalendar = _ref => {
  let {
    date,
    locale,
    calendar
  } = _ref;
  return () => /*#__PURE__*/_react.default.createElement(_calendarStoryWrapper.CalendarStoryWrapper, {
    component: _calendarInput.CalendarInput,
    dir: "ltr",
    timeZone: "Africa/Khartoum",
    weekDayFormat: "short",
    date: date,
    locale: locale,
    calendar: calendar
  });
};

const EthiopicWithAmharic = buildCalendar({
  calendar: 'ethiopic',
  locale: 'am-ET',
  date: '2014-02-03' // 13 Oct 2021

});
exports.EthiopicWithAmharic = EthiopicWithAmharic;
const EthiopicWithEnglish = buildCalendar({
  calendar: 'ethiopian',
  // using "ethiopian" rather than the correct "ethiopic" to immitate DHIS2 calendar types
  locale: 'en-ET',
  date: '2014-02-03' // 13 Oct 2021

});
exports.EthiopicWithEnglish = EthiopicWithEnglish;
const NepaliWithNepali = buildCalendar({
  calendar: 'nepali',
  locale: 'ne-NP',
  date: '2078-06-27' // 13 Oct 2021

});
exports.NepaliWithNepali = NepaliWithNepali;
const NepaliWithEnglish = buildCalendar({
  calendar: 'nepali',
  locale: 'en-NP',
  date: '2078-06-27' // 13 Oct 2021

});
exports.NepaliWithEnglish = NepaliWithEnglish;
const GregorianWithEnglish = buildCalendar({
  calendar: 'gregorian',
  locale: 'en-CA',
  date: '2021-10-13'
});
exports.GregorianWithEnglish = GregorianWithEnglish;
const GregorianWithArabic = buildCalendar({
  calendar: 'gregorian',
  locale: 'ar-SD',
  date: '2021-10-13'
});
exports.GregorianWithArabic = GregorianWithArabic;

const IslamicWithArabic = () => {
  return /*#__PURE__*/_react.default.createElement("div", {
    style: {
      direction: 'rtl'
    }
  }, /*#__PURE__*/_react.default.createElement(_calendarStoryWrapper.CalendarStoryWrapper, {
    component: _calendarInput.CalendarInput,
    dir: "rtl",
    timeZone: "Africa/Khartoum",
    weekDayFormat: "short",
    date: "1477-01-13",
    locale: "ar-SD",
    calendar: "islamic-civil",
    clearable: true
  }));
};

exports.IslamicWithArabic = IslamicWithArabic;

const CalendarWithClearButton = _ref2 => {
  let {
    calendar = 'gregory',
    date: initialDate = null
  } = _ref2;
  const [date, setDate] = (0, _react.useState)(initialDate);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_calendarInput.CalendarInput, {
    calendar: calendar,
    date: date,
    onDateSelect: date => {
      setDate(date === null || date === void 0 ? void 0 : date.calendarDateString);
    },
    clearable: true
  }), /*#__PURE__*/_react.default.createElement("div", null, "value:", /*#__PURE__*/_react.default.createElement("span", {
    "data-test": "storybook-calendar-date-value"
  }, date !== null && date !== void 0 ? date : 'undefined')));
};

exports.CalendarWithClearButton = CalendarWithClearButton;