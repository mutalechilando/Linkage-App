"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "EthiopicWithAmharic", {
  enumerable: true,
  get: function () {
    return _calendarInputStories.EthiopicWithAmharic;
  }
});
Object.defineProperty(exports, "EthiopicWithEnglish", {
  enumerable: true,
  get: function () {
    return _calendarInputStories.EthiopicWithEnglish;
  }
});
Object.defineProperty(exports, "GregorianWithArabic", {
  enumerable: true,
  get: function () {
    return _calendarInputStories.GregorianWithArabic;
  }
});
Object.defineProperty(exports, "GregorianWithEnglish", {
  enumerable: true,
  get: function () {
    return _calendarInputStories.GregorianWithEnglish;
  }
});
Object.defineProperty(exports, "IslamicWithArabic", {
  enumerable: true,
  get: function () {
    return _calendarInputStories.IslamicWithArabic;
  }
});
Object.defineProperty(exports, "NepaliWithEnglish", {
  enumerable: true,
  get: function () {
    return _calendarInputStories.NepaliWithEnglish;
  }
});
Object.defineProperty(exports, "NepaliWithNepali", {
  enumerable: true,
  get: function () {
    return _calendarInputStories.NepaliWithNepali;
  }
});
exports.default = exports.TestCalendarWithClearButton = void 0;

var _react = _interopRequireDefault(require("react"));

var _index = require("../index.js");

var _calendarInputStories = require("../stories/calendar-input.stories.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = {
  title: 'CalendarInputTesting',
  component: _index.CalendarInput
};
exports.default = _default;

const TestCalendarWithClearButton = () => {
  var _params$get, _params$get2;

  const params = new URLSearchParams(location.search);
  const calendar = (_params$get = params.get('calendar')) !== null && _params$get !== void 0 ? _params$get : 'gregory';
  const initialDate = (_params$get2 = params.get('initialDate')) !== null && _params$get2 !== void 0 ? _params$get2 : null;
  return /*#__PURE__*/_react.default.createElement(_calendarInputStories.CalendarWithClearButton, {
    calendar: calendar,
    date: initialDate
  });
};

exports.TestCalendarWithClearButton = TestCalendarWithClearButton;