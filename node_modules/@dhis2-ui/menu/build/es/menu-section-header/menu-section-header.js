import _JSXStyle from "styled-jsx/style";
import { Divider } from '@dhis2-ui/divider';
import { colors, spacers } from '@dhis2/ui-constants';
import cx from 'classnames';
import PropTypes from 'prop-types';
import React from 'react';

const MenuSectionHeader = _ref => {
  let {
    className,
    dataTest,
    dense,
    hideDivider,
    label
  } = _ref;
  return /*#__PURE__*/React.createElement("li", {
    "data-test": dataTest,
    className: _JSXStyle.dynamic([["1160864328", [colors.white, spacers.dp8, spacers.dp16, spacers.dp8, spacers.dp16, colors.grey700, spacers.dp8, spacers.dp12, spacers.dp4, spacers.dp12]]]) + " " + (cx(className, {
      dense
    }) || "")
  }, !hideDivider && /*#__PURE__*/React.createElement(Divider, {
    dense: dense
  }), /*#__PURE__*/React.createElement("h6", {
    className: _JSXStyle.dynamic([["1160864328", [colors.white, spacers.dp8, spacers.dp16, spacers.dp8, spacers.dp16, colors.grey700, spacers.dp8, spacers.dp12, spacers.dp4, spacers.dp12]]])
  }, label), /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "1160864328",
    dynamic: [colors.white, spacers.dp8, spacers.dp16, spacers.dp8, spacers.dp16, colors.grey700, spacers.dp8, spacers.dp12, spacers.dp4, spacers.dp12]
  }, ["li.__jsx-style-dynamic-selector{list-style:none;background-color:".concat(colors.white, ";-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;padding:0;line-height:0;}"), "h6.__jsx-style-dynamic-selector{margin:0;padding:".concat(spacers.dp8, " ").concat(spacers.dp16, " ").concat(spacers.dp8, " ").concat(spacers.dp16, ";font-size:13px;line-height:16px;font-weight:500;color:").concat(colors.grey700, ";}"), "li.dense.__jsx-style-dynamic-selector h6.__jsx-style-dynamic-selector{padding:".concat(spacers.dp8, " ").concat(spacers.dp12, " ").concat(spacers.dp4, " ").concat(spacers.dp12, ";}")]));
};

MenuSectionHeader.defaultProps = {
  dataTest: 'dhis2-uicore-menusectionheader'
};
MenuSectionHeader.propTypes = {
  className: PropTypes.string,
  dataTest: PropTypes.string,
  dense: PropTypes.bool,
  hideDivider: PropTypes.bool,
  label: PropTypes.node
};
export { MenuSectionHeader };