"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PWALoadingBoundary = void 0;

var _pwa = require("@dhis2/pwa");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = require("react");

var _OfflineInterfaceContext = require("./OfflineInterfaceContext");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const PWALoadingBoundary = _ref => {
  let {
    children
  } = _ref;
  const [pwaReady, setPWAReady] = (0, _react.useState)(false);
  const offlineInterface = (0, _OfflineInterfaceContext.useOfflineInterface)();
  (0, _react.useEffect)(() => {
    const checkRegistration = async () => {
      const registrationState = await offlineInterface.getRegistrationState();
      const clientsInfo = await offlineInterface.getClientsInfo();

      if ((registrationState === _pwa.REGISTRATION_STATE_WAITING || registrationState === _pwa.REGISTRATION_STATE_FIRST_ACTIVATION) && clientsInfo.clientsCount === 1) {
        console.log('Reloading on startup to activate waiting service worker');
        offlineInterface.useNewSW();
      } else {
        setPWAReady(true);
      }
    };

    checkRegistration().catch(err => {
      console.error(err);
      setPWAReady(true);
    });
  }, [offlineInterface]);
  return pwaReady ? children : null;
};

exports.PWALoadingBoundary = PWALoadingBoundary;
PWALoadingBoundary.propTypes = {
  children: _propTypes.default.node.isRequired
};