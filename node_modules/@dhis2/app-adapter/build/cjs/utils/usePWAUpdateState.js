"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.usePWAUpdateState = void 0;

var _react = require("react");

var _OfflineInterfaceContext = require("../components/OfflineInterfaceContext");

const usePWAUpdateState = () => {
  const offlineInterface = (0, _OfflineInterfaceContext.useOfflineInterface)();
  const [updateAvailable, setUpdateAvailable] = (0, _react.useState)(false);
  const [clientsCount, setClientsCount] = (0, _react.useState)(null);

  const onConfirmUpdate = () => {
    offlineInterface.useNewSW();
  };

  const onCancelUpdate = () => {
    setClientsCount(null);
  };

  const confirmReload = () => {
    offlineInterface.getClientsInfo().then(_ref => {
      let {
        clientsCount
      } = _ref;

      if (clientsCount === 1) {
        // Just one client; go ahead and reload
        onConfirmUpdate();
      } else {
        // Multiple clients; warn about data loss before reloading
        setClientsCount(clientsCount);
      }
    }).catch(reason => {
      // Didn't get clients info
      console.warn(reason); // Go ahead with confirmation modal with `0` as clientsCount

      setClientsCount(0);
    });
  };

  (0, _react.useEffect)(() => {
    offlineInterface.checkForNewSW({
      onNewSW: () => {
        setUpdateAvailable(true);
      }
    });
  }, [offlineInterface]);
  const confirmationRequired = clientsCount !== null;
  return {
    updateAvailable,
    confirmReload,
    confirmationRequired,
    clientsCount,
    onConfirmUpdate,
    onCancelUpdate
  };
};

exports.usePWAUpdateState = usePWAUpdateState;