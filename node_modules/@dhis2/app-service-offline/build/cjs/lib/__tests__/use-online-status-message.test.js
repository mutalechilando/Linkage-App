"use strict";

var _reactHooks = require("@testing-library/react-hooks");

var _react = _interopRequireDefault(require("react"));

var _testMocks = require("../../utils/test-mocks");

var _offlineProvider = require("../offline-provider");

var _onlineStatusMessage = require("../online-status-message");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('useOnlineStatusMessage', () => {
  it('should allow the online status to be updated ', () => {
    const wrapper = (_ref) => {
      let {
        children
      } = _ref;
      return /*#__PURE__*/_react.default.createElement(_offlineProvider.OfflineProvider, {
        offlineInterface: _testMocks.mockOfflineInterface
      }, children);
    };

    const {
      result
    } = (0, _reactHooks.renderHook)(() => (0, _onlineStatusMessage.useOnlineStatusMessage)(), {
      wrapper
    });
    expect(result.current.onlineStatusMessage).toBeUndefined();
    (0, _reactHooks.act)(() => {
      result.current.setOnlineStatusMessage('8 offline events');
    });
    expect(result.current.onlineStatusMessage).toEqual('8 offline events');
  });
});