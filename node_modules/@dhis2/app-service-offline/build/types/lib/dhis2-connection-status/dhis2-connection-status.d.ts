import PropTypes from 'prop-types';
import React from 'react';
declare type AppName = string | undefined;
export declare const getLastConnectedKey: (appName?: AppName) => string;
export interface Dhis2ConnectionStatus {
    isConnected: boolean;
    isDisconnected: boolean;
    lastConnected: Date | null;
}
/**
 * Provides a boolean indicating client's connection to the DHIS2 server,
 * which is different from connection to the internet.
 *
 * The context provider subscribes to messages from the SW tracking successes
 * and failures of requests to the DHIS2 server to determine connection status,
 * and then will initiate periodic pings if there are no incidental requests in
 * order to check the connection consistently
 */
export declare const Dhis2ConnectionStatusProvider: {
    ({ children, }: {
        children: React.ReactNode;
    }): JSX.Element;
    propTypes: {
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
    };
};
export declare const useDhis2ConnectionStatus: () => Dhis2ConnectionStatus;
export {};
