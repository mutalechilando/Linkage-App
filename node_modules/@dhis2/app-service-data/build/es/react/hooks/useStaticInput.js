import { useState, useEffect, useRef, useDebugValue } from 'react';
export const useStaticInput = function (staticValue) {
  let {
    warn = false,
    name = 'input'
  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  const originalValue = useRef(staticValue);
  const [value, setValue] = useState(() => originalValue.current);
  useDebugValue(value, debugValue => `${name}: ${JSON.stringify(debugValue)}`);
  useEffect(() => {
    if (warn && originalValue.current !== staticValue) {
      console.warn(`The ${name} should be static, don't create it within the render loop!`);
    }
  }, [warn, staticValue, originalValue, name]);
  return [value, setValue];
};